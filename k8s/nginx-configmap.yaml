apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {}
    http {
      # If any upstream returns a 502, serve our loading page
      error_page 502 = /loading.html;

      upstream ui           { server frontend:8080; }
      upstream keycloak_svc { server keycloak:8081; }
      upstream backend_svc  { server backend:8080; }

      server {
        listen 80;

        # Static loading page (internal only)
        location = /loading.html {
          root /usr/share/nginx/html;
          internal;
        }

        # 1) Keycloak endpoints → show loading if not up yet
        location /auth/ {
          proxy_pass         http://keycloak_svc/auth/;
          proxy_set_header   Host              $host;
          proxy_set_header   X-Real-IP         $remote_addr;
          proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
          error_page         502 = /loading.html;
        }

        # 2) API → backend
        location /api/ {
          proxy_pass         http://backend_svc;
          proxy_set_header   Host              $host;
          proxy_set_header   X-Real-IP         $remote_addr;
          proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # 3) Everything else → SPA
        location / {
          proxy_pass         http://ui;
          proxy_set_header   Host              $host;
          proxy_set_header   X-Real-IP         $remote_addr;
          proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
        }
      }
    }